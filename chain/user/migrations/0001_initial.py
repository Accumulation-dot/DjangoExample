# Generated by Django 3.0.2 on 2020-03-23 09:23

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CoinUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('qq', models.CharField(blank=True, max_length=20, verbose_name='qq 号码')),
                ('wechat', models.CharField(blank=True, max_length=40, verbose_name='微信号码')),
                ('level', models.PositiveSmallIntegerField(choices=[(0, '管理员'), (1, '普通用户')], default=1, help_text='等级', verbose_name='等级')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                                                            related_name='user_set', related_query_name='user',
                                                            to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户信息表',
                'verbose_name_plural': '用户信息表',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Identifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='用户信息', max_length=20, verbose_name='姓名')),
                ('number', models.CharField(help_text='银行卡', max_length=20, verbose_name='银行卡号')),
                ('user', models.OneToOneField(help_text='用户信息', on_delete=django.db.models.deletion.DO_NOTHING,
                                              to=settings.AUTH_USER_MODEL, verbose_name='用户信息')),
            ],
            options={
                'verbose_name': '身份证信息',
                'verbose_name_plural': '身份证信息',
            },
        ),
        migrations.CreateModel(
            name='CoinUserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name',
                 models.CharField(blank=True, default='', help_text='用户名称 需要完善信息', max_length=20, verbose_name='用户名称')),
                ('coin', models.FloatField(default=0.0, help_text='用户积分', verbose_name='用户的积分')),
                ('created', models.DateTimeField(auto_now=True, help_text='创建时间', verbose_name='创建时间')),
                ('frozen', models.FloatField(default=0.0, help_text='用户积分', verbose_name='用户的积分')),
                ('address', models.CharField(help_text='地址', max_length=100, verbose_name='地址')),
                ('user',
                 models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户数量表',
                'verbose_name_plural': '用户数量表',
            },
        ),
    ]
